<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="product">
	<resultMap type="Product" id="ProductMap" autoMapping="true">
		<id column="product_id" property="productId" />

		<collection property="images" javaType="ArrayList"
			ofType="ProductImage" autoMapping="true">
			<id column="image_id" property="imageId" />
			<result column="uuid" property="uuid" />
			<result column="image_name" property="imageName" />
			<!-- 다른 필요한 ProductImage에 대한 매핑을 추가 -->
		</collection>
	</resultMap>

	<select id="list" resultMap="ProductMap">
    <![CDATA[
    SELECT  product.*, product_image.* FROM product
    LEFT JOIN product_image ON
    product.product_id = product_image.product_id GROUP BY product.product_id
    ]]>
		<where>
			<if test="soldCheck != 99">
				and sold_check = #{soldCheck}
			</if>
			<if test="userId != null">
				and user_id = #{userId}
			</if>
			<if test="name != '' and name != null and name != 'undefined'">
				and name = #{name}
			</if>
			<if test="searchNotEmpty">
				and product.product_name like CONCAT('%', #{search}, '%')
			</if>
		</where>
		<if test="order != null">
			<choose>
				<when test="order == 'ASC'">
                <![CDATA[ORDER BY product.product_date ASC]]>
				</when>
				<when test="order == 'DESC'">
                <![CDATA[ORDER BY product.product_date DESC]]>
				</when>
				<!-- Add additional cases if needed -->
			</choose>
		</if>
		LIMIT #{row}
	</select>

	<insert id="add" useGeneratedKeys="true" keyProperty="productId"
		parameterType="Product">
		INSERT INTO
		product(user_id,name,name2,product_name,product_price,product_stock,product_status,product_detail,delivery_price)
		VALUES (#{userId},#{name}, #{name2}, #{productName},
		#{productPrice},
		#{productStock},#{productStatus},#{productDetail},#{deliveryPrice})
	</insert>

	<insert id="add_image">
		INSERT INTO product_image
		(product_id, image_name,
		uuid)
		VALUES
		(#{productId}, #{imageName}, #{uuid})
	</insert>

	<update id="update">
		UPDATE product
		SET product_name=#{productName},
		name=#{name}, name2=#{name2},
		product_price=#{productPrice},product_stock = #{productStock},
		product_status=#{productStatus},product_detail = #{productDetail}
		WHERE
		product_id=#{productId}
	</update>

	<update id="soldCheck">
		UPDATE product
		SET sold_check = #{soldCheck}
		WHERE
		product_id=#{productId}
	</update>



	<resultMap type="Category1" id="CategoryMap"
		autoMapping="true">
		<id column="name" property="name" />

		<collection property="category2" column="name"
			javaType="ArrayList" ofType="Category2" autoMapping="true">
		</collection>
	</resultMap>

	<select id="category" resultMap="CategoryMap">
		SELECT category1.*, category2.*
		FROM category1 LEFT JOIN category2 ON
		category1.name = category2.name
		Order by category1.order ASC;
	</select>

	<delete id="delete">
		DELETE FROM product WHERE product_id = #{productId}
	</delete>

	<delete id="deleteImage">
		DELETE FROM product_image WHERE uuid IN
		<foreach collection="list" item="item" open="(" close=")"
			separator=",">
			#{item.uuid}
		</foreach>
	</delete>


	<select id="soldOrderList" resultMap="ProductMap">
		SELECT o.*, p.product_name,
		p.product_price, product_image.*
		FROM product p
		JOIN orders o ON
		p.product_id = o.product_id LEFT JOIN product_image ON
		p.product_id =
		product_image.product_id WHERE
		o.user_id =
		#{userId};
	</select>

	<select id="getImage" resultType="ProductImage">
		SELECT *
		FROM product_image
		WHERE product_id = #{productId}
	</select>


	<update id="addView">
 <![CDATA[
  UPDATE product
  SET views = views + 1  ]]>
		WHERE product_id = #{productId}
	</update>



</mapper>