<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">




	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<security:http>
		<security:form-login login-page="/auth/login"
			login-processing-url="/auth/login" username-parameter="email"
			password-parameter="passwd" default-target-url="/" />

		<security:intercept-url pattern="/products/new"
			access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/**"
			access="permitAll" />
	</security:http>

	<security:global-method-security
		pre-post-annotations="enabled" />

	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="customUserDetailsService">
			<!-- <security:user-service> <security:user name="aaa" password="{noop}aaa" 
				authorities="ROLE_MEMBER"/> <security:user name="admin" password="{noop}admin" 
				authorities="ROLE_MEMBER, ROLE_ADMIN"/> </security:user-service> -->
			<security:password-encoder hash="bcrypt" />
			<!--<security:jdbc-user-service data-source-ref="dataSource" users-by-username-query="SELECT 
				email as username, passwd as password, ENABLED FROM USER WHERE EMAIL=?" authorities-by-username-query="SELECT 
				email as username, authority FROM USER WHERE EMAIL=?" /> -->
		</security:authentication-provider>
	</security:authentication-manager>
	<context:component-scan
		base-package="kr.ac.kopo" />
</beans>

